name: Industrialisation continue sur le serveur Alwaysdata
on: push
jobs:
  Connexion:
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd $HOME/www/

  Copy:
    needs: Connexion
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            last_directory=$(basename ${{ runner.workspace }})
            cd $HOME/www/
            git clone https://github.com/${{ github.repository }}.git

            # Vérifier si le répertoire de destination 'front' existe
            if [ -d "./front" ]; then
              echo "Le répertoire 'front' existe, préparation du transfert..."
              
              # Vérifier si le répertoire 'out' existe dans le dossier cloné
              if [ -d "./${last_directory}/out" ]; then
                # Utiliser rsync pour copier le contenu du dossier 'out' vers './front'
                rsync -av --delete ./${last_directory}/out/ ./front/
                echo "Contenu de 'out' copié avec succès dans 'front'."
                
                # Nettoyer en supprimant le répertoire cloné
                rm -rf ./${last_directory}
              else
                echo "Le répertoire 'out' n'a pas été trouvé dans le répertoire cloné."
                exit 1
              fi
            else
              echo "Le répertoire 'front' de destination n'existe pas sur votre serveur."
              exit 1
            fi

            # cd $HOME/www/front/cv
            # echo '${{ secrets.MY_SECRET_FILE_CONTENT }}' > .htpasswd

            # # Créer .htaccess
            # echo 'AuthName "Accès protégé"
            # AuthType Basic
            # AuthUserFile /home/jordanwakelam/www/front/cv/.htpasswd
            # Require valid-user' > .htaccess

      - name: Créer le fichier JSON
        id: create-json
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "data_json.json"
          json: ${{ secrets.DATA_JSON }}

      - name: Supprimer le fichier JSON existant
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            rm -f $HOME/www/front/data/data_json.json

      - name: Transférer le fichier JSON
        uses: appleboy/scp-action@v0.1.0
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "./data_json.json"
          target: "$HOME/www/front/data/"

